{"version":3,"sources":["components/Header.js","components/MenuItems.js","components/Navbar.js","components/Forecast/Conditions.js","components/Forecast/Forecast.js","App.js","reportWebVitals.js","index.js","components/Forecast/Forecast.module.css","components/Forecast/Conditions.module.css"],"names":["Header","title","className","defaultProps","MenuItems","url","cName","Navbar","map","item","index","href","Conditions","props","classes","Wrapper","error","Small","loading","Loader","responseObj","cod","name","Math","round","main","temp","weather","description","Forecast","useState","city","setCity","unit","setUnit","setResponseObj","setError","setLoading","onSubmit","e","preventDefault","length","uriEncodedCity","encodeURIComponent","fetch","then","response","json","Error","catch","err","console","log","message","type","placeholder","maxLength","textInput","value","onChange","target","Radio","checked","Button","App","id","day","weatherType","temperature","picture","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6f4b02c8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Header = ( { title }) => {\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n        </header>\n    )\n}\n\n\nHeader.defaultProps = {\n    title: '7 day forecast',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header","export const MenuItems = [\n    {\n        title: 'Home',\n        url: '#',\n        cName: 'nav-links' //class name\n    },\n        {\n        title: 'Settings',\n        url: '#',\n        cName: 'nav-links' //class name\n    },\n]","import { MenuItems } from './MenuItems'\n\nconst Navbar = () => {\n    return (\n        <nav className='NavbarItem'>\n            <h1 className=\"navbar-logo\">Weather App</h1>\n            <div className=\"menu-icon\">\n\n            </div>\n            <ul>\n                {MenuItems.map((item, index) => {\n                    return (\n                    <li key={index}>\n                        <a className={item.cName} href={item.url}>\n                            {item.title}\n                        </a>\n                    </li>\n                    )\n                })}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport classes from './Conditions.module.css'\n\nconst Conditions = (props) => {\n    return (\n        <div className={classes.Wrapper}>\n\n            {props.error && <small className={classes.Small}>Please enter a valid city.</small>}\n\n            {props.loading && <div className={classes.Loader} />}\n\n\n            {props.responseObj.cod === 200 ?\n                <div>\n                    <p><strong>{props.responseObj.name}</strong></p>\n                    <p>It is currently {Math.round(props.responseObj.main.temp)} degrees out with {props.responseObj.weather[0].description}.</p>\n                </div>\n            : null\n            }\n        </div>\n    )\n}\n\nexport default Conditions\n","import { useState } from 'react'\nimport Conditions from './Conditions'\nimport classes from './Forecast.module.css'\n\nconst Forecast = () => {\n\n    let [city, setCity] = useState('')\n    let [unit, setUnit] = useState('imperial') //this sets imperial as the default unit\n    let [responseObj, setResponseObj] = useState({})\n    let [error, setError] = useState(false)\n    let [loading, setLoading] = useState(false)\n\n\n    const getForecast = (e) => {\n\n        e.preventDefault()\n\n        if (city.length === 0){\n            return setError(true)\n        }\n\n        setError(false)\n        setResponseObj({})\n\n        setLoading(true)\n\n        const uriEncodedCity = encodeURIComponent(city)\n\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n            }\n        })\n        .then(response => response.json())\n        .then(response => {\n            if (response.cod !== 200) {\n                throw new Error()\n            }\n    \n            setResponseObj(response);\n            setLoading(false);\n        })\n        .catch(err => {\n            setError(true);\n            setLoading(false);\n            console.log(err.message);\n        });\n\n    }\n\n    return (\n        <div>\n            <h2>Find Current Weather Conditions</h2>\n            <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    className={classes.textInput}\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    />\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celcius\n                </label>\n\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\n            </form>\n            <Conditions\n               responseObj={responseObj}\n               error={error}\n               loading={loading}\n               />\n        </div>\n    )\n}\n\nexport default Forecast\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Navbar from './components/Navbar'\n//import Weekdays from './components/Weekdays'\nimport Forecast from './components/Forecast/Forecast'\nimport { FaSnowflake, FaCloudRain, FaCloud, FaSun } from 'react-icons/fa'\n\nconst App = () => {\nconst [weekdays, setWeather] = useState(\n  [\n    {\n      id: 1,\n      day: 'Sunday',\n      weatherType: 'Snow',\n      temperature: '-1°',\n      picture: <FaSnowflake />,\n    },\n    {\n      id: 2,\n      day: 'Monday',\n      weatherType: 'Rain',\n      temperature: '3°',\n      picture: <FaCloudRain />,\n    },\n    {\n      id: 3,\n      day: 'Tuesday',\n      weatherType: 'Cloudy',\n      temperature: '6°',\n      picture: <FaCloud />,\n    },\n    {\n      id: 4,\n      day: 'Wednesday',\n      weatherType: 'Rain',\n      temperature: '5°',\n      picture: <FaCloudRain />,\n    },\n    {\n      id: 5,\n      day: 'Thursday',\n      weatherType: 'Cloudy',\n      temperature: '7°',\n      picture: <FaCloud />,\n    },\n    {\n      id: 6,\n      day: 'Friday',\n      weatherType: 'Sunny',\n      temperature: '12°',\n      picture: <FaSun />,\n    },\n    {\n      id: 7,\n      day: 'Saturday',\n      weatherType: 'Sunny',\n      temperature: '11°',\n      picture: <FaSun />,\n    }\n  ]\n)\n\n//<Weekdays weekdays={weekdays} /> to go under <Forecast />\n  return (\n    <div className=\"container\">\n      <Navbar />\n      <Header />\n      <Forecast /> \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"Forecast_textInput__39zH8\",\"Radio\":\"Forecast_Radio__1Ejlt\",\"Button\":\"Forecast_Button__3Y_IL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Conditions_Wrapper__2qcMU\",\"Small\":\"Conditions_Small__1YFoS\",\"Loader\":\"Conditions_Loader__3UU6P\",\"spin\":\"Conditions_spin__3w0nI\"};"],"sourceRoot":""}