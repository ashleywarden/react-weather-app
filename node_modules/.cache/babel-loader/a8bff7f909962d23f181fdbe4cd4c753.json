{"ast":null,"code":"var _jsxFileName = \"/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/FiveDayForecast.js\";\nimport React from 'react';\nimport FiveDayConditions from './FiveDayConditions';\nimport Forecast from './Forecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FiveDayForecast extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      wholeData: [],\n      dailyData: []\n    };\n\n    this.componentDidMount = () => {\n      const {\n        uriEncodedCity\n      } = require('./Forecast');\n\n      FiveDayForecast.defaultProps = {\n        uriEncodedCity: 'vancouver'\n      };\n      fetch(`https://community-open-weather-map.p.rapidapi.com/forecast?q=${uriEncodedCity}&units=metric`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n        }\n      }).then(res => res.json()).then(data => {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        this.setState({\n          wholeData: data.list,\n          dailyData: dailyData\n        }, () => console.log(this.state));\n      });\n    };\n\n    this.createFiveDayContainer = () => {\n      return this.state.dailyData.map((reading, index) => /*#__PURE__*/_jsxDEV(FiveDayConditions, {\n        reading: reading\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 57\n      }, this));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.createFiveDayContainer()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FiveDayForecast;","map":{"version":3,"sources":["/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/FiveDayForecast.js"],"names":["React","FiveDayConditions","Forecast","FiveDayForecast","Component","state","wholeData","dailyData","componentDidMount","uriEncodedCity","require","defaultProps","fetch","then","res","json","data","list","filter","reading","dt_txt","includes","setState","console","log","createFiveDayContainer","map","index","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,SAAS,EAAE;AAFL,KADoC;;AAAA,SAM5CC,iBAN4C,GAMxB,MAAM;AAExB,YAAM;AAAEC,QAAAA;AAAF,UAAqBC,OAAO,CAAC,YAAD,CAAlC;;AAEAP,MAAAA,eAAe,CAACQ,YAAhB,GAA8B;AAC1BF,QAAAA,cAAc,EAAE;AADU,OAA9B;AAIAG,MAAAA,KAAK,CAAE,gEAA+DH,cAAe,eAAhF,EAAgG;AACjG,kBAAU,KADuF;AAEjG,mBAAW;AACP,4BAAkB,oDADX;AAEP,6BAAmB;AAFZ;AAFsF,OAAhG,CAAL,CAOCI,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,IAAI,IAAI;AACZ,cAAMT,SAAS,GAAGS,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;AACA,aAAKC,QAAL,CAAc;AACZhB,UAAAA,SAAS,EAAEU,IAAI,CAACC,IADJ;AAEZV,UAAAA,SAAS,EAAEA;AAFC,SAAd,EAGG,MAAMgB,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB,CAHT;AAID,OAdD;AAeD,KA7B2C;;AAAA,SAgC5CoB,sBAhC4C,GAgCnB,MAAM;AAC7B,aAAO,KAAKpB,KAAL,CAAWE,SAAX,CAAqBmB,GAArB,CAAyB,CAACP,OAAD,EAAUQ,KAAV,kBAAoB,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAER;AAA5B,SAA0CQ,KAA1C;AAAA;AAAA;AAAA;AAAA,cAA7C,CAAP;AACD,KAlC2C;AAAA;;AAoC5CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKH,sBAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1C2C;;AA6C9C,eAAetB,eAAf","sourcesContent":["\nimport React from 'react'\nimport FiveDayConditions from './FiveDayConditions'\nimport Forecast from './Forecast'\n\nclass FiveDayForecast extends React.Component {\n  state = {\n    wholeData: [],\n    dailyData: []\n  }\n\n  componentDidMount = () => {\n\n    const { uriEncodedCity } = require('./Forecast');\n\n    FiveDayForecast.defaultProps ={\n        uriEncodedCity: 'vancouver'\n    }\n\n    fetch(`https://community-open-weather-map.p.rapidapi.com/forecast?q=${uriEncodedCity}&units=metric`, {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n            \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n        }\n    })\n    .then(res => res.json())\n    .then(data => {\n      const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\n      this.setState({\n        wholeData: data.list,\n        dailyData: dailyData\n      }, () => console.log(this.state))\n    })\n  }\n\n\n  createFiveDayContainer = () => {\n    return this.state.dailyData.map((reading, index) => <FiveDayConditions reading={reading} key={index} />)\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createFiveDayContainer()}\n      </div>\n    )\n  }\n}\n\nexport default FiveDayForecast"]},"metadata":{},"sourceType":"module"}