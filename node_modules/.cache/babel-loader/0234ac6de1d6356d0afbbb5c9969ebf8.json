{"ast":null,"code":"var _jsxFileName = \"/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/FiveDayForecastTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiveDayForecastTest = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [city, setCity] = useState('');\n  useEffect(() => {\n    fetch(`https://community-open-weather-map.p.rapidapi.com/forecast?q=vancouver&units=metric`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.cod !== 200) {\n        throw new Error();\n      }\n\n      console.log(response.list.filter(reading => reading.dt_txt.includes(\"18:00:00\")));\n    }).catch(err => {\n      console.log(err.message);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FiveDayForecastTest, \"Cf6BQzopqhT10MjOGPR7soCTKdE=\");\n\n_c = FiveDayForecastTest;\nexport default FiveDayForecastTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiveDayForecastTest\");","map":{"version":3,"sources":["/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/FiveDayForecastTest.js"],"names":["React","useEffect","useState","FiveDayForecastTest","data","setData","city","setCity","fetch","then","res","json","response","cod","Error","console","log","list","filter","reading","dt_txt","includes","catch","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEJD,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,KAAK,CAAE,qFAAF,EAAwF;AACzF,gBAAU,KAD+E;AAEzF,iBAAW;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAF8E,KAAxF,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,GAAT,KAAiB,GAArB,EAA0B;AACtB,cAAM,IAAIC,KAAJ,EAAN;AACH;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAAT,CAAcC,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAAhC,CAAZ;AACH,KAdD,EAeCC,KAfD,CAeOC,GAAG,IAAI;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,OAAhB;AACH,KAjBD;AAkBH,GApBQ,CAAT;AAsBI,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnCD;;GAAMrB,mB;;KAAAA,mB;AAqCN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst FiveDayForecastTest = () => {\n\n    const [data, setData] = useState({})\n    const [city, setCity] = useState('')\n\nuseEffect(() => {\n\n    fetch(`https://community-open-weather-map.p.rapidapi.com/forecast?q=vancouver&units=metric`, {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n            \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n        }\n    })\n    .then(res => res.json())\n    .then(response => {\n        if (response.cod !== 200) {\n            throw new Error()\n        }\n\n        console.log(response.list.filter(reading => reading.dt_txt.includes(\"18:00:00\")))\n    })\n    .catch(err => {\n        console.log(err.message);\n    });\n})\n\n    return (\n        <div>\n            <ul>\n                {}\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default FiveDayForecastTest\n"]},"metadata":{},"sourceType":"module"}