{"ast":null,"code":"var _jsxFileName = \"/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/WeatherCard.js\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = ({\n  dt,\n  temp_min,\n  temp_max,\n  main,\n  icon\n}) => {\n  const date = new Date(dt);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '11rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: `http://openweathermap.org/img/wn/${icon}@2x.png` //datetime is received in milliseconds, let's turn into local date time\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [date.toLocaleDateString(), \" - \", date.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Min: \", temp_min, /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max: \", temp_max, /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WeatherCard;\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/WeatherCard.js"],"names":["React","Card","WeatherCard","dt","temp_min","temp_max","main","icon","date","Date","width","toLocaleDateString","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,QAAL;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,IAAzB;AAA+BC,EAAAA;AAA/B,CAAD,KAA0C;AAE1D,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASN,EAAT,CAAb;AACA,sBACA,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAE;AAAR,KAAb;AAAA,4BACI,QAAC,IAAD,CAAM,GAAN;AACI,MAAA,OAAO,EAAC,KADZ;AAEI,MAAA,GAAG,EAAG,oCAAmCH,IAAK,SAFlD,CAGK;;AAHL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBACKE,IAAI,CAACG,kBAAL,EADL,SACmCH,IAAI,CAACI,kBAAL,EADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,4BAASR,QAAT,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,4BAASC,QAAT,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH,CArBD;;KAAMH,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport {Card} from 'react-bootstrap'\n\nconst WeatherCard = ({dt, temp_min, temp_max, main, icon}) => {\n\n    const date = new Date(dt);\n    return (\n    <Card style={{width: '11rem'}}>\n        <Card.Img \n            variant=\"top\" \n            src={`http://openweathermap.org/img/wn/${icon}@2x.png`} \n             //datetime is received in milliseconds, let's turn into local date time\n        />\n        <Card.Body>\n            <Card.Title>{main}</Card.Title>\n            <p>\n                {date.toLocaleDateString()} - {date.toLocaleTimeString()}\n            </p>\n            <p>Min: {temp_min}<sup>&deg;C</sup></p>\n            <p>Max: {temp_max}<sup>&deg;C</sup></p>\n        </Card.Body>\n\n    </Card>\n    )\n}\n\nexport default WeatherCard\n"]},"metadata":{},"sourceType":"module"}