{"ast":null,"code":"var _jsxFileName = \"/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/FiveDayForecastTest.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FiveDayConditions from './FiveDayConditions';\nimport classes from './Forecast.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiveDayForecastTest = () => {\n  _s();\n\n  let [dailyData, setDailyData] = useState([]);\n  let [wholeData, setWholeData] = useState([]);\n  let [city, setCity] = useState('');\n\n  const getFiveDayForecast = e => {\n    e.preventDefault();\n    const uriEncodedCity = encodeURIComponent(city);\n    fetch(`https://community-open-weather-map.p.rapidapi.com/forecast?q=?${uriEncodedCity}&units=metric`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n      }\n    }).then(response => response.json()).then(data => {\n      dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n      setDailyData(dailyData);\n      setWholeData(data.list);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getFiveDayForecast,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        maxLength: \"50\",\n        className: classes.textInput,\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.Button,\n        type: \"submit\",\n        children: \"Get Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FiveDayConditions, {\n      dailyData: dailyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FiveDayForecastTest, \"bsjqRhj+VXwXa0SuQi68+jXbMoQ=\");\n\n_c = FiveDayForecastTest;\nexport default FiveDayForecastTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiveDayForecastTest\");","map":{"version":3,"sources":["/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/FiveDayForecastTest.js"],"names":["useState","FiveDayConditions","classes","FiveDayForecastTest","dailyData","setDailyData","wholeData","setWholeData","city","setCity","getFiveDayForecast","e","preventDefault","uriEncodedCity","encodeURIComponent","fetch","then","response","json","data","list","filter","reading","dt_txt","includes","catch","err","console","log","message","textInput","target","value","Button"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMU,kBAAkB,GAAIC,CAAD,IAAO;AAE9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAGC,kBAAkB,CAACN,IAAD,CAAzC;AAEAO,IAAAA,KAAK,CAAE,iEAAgEF,cAAe,eAAjF,EAAiG;AAClG,gBAAU,KADwF;AAElG,iBAAW;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAFuF,KAAjG,CAAL,CAOCG,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,IAAI,IAAI;AACVf,MAAAA,SAAS,GAAGe,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAZ;AACAnB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,MAAAA,YAAY,CAACY,IAAI,CAACC,IAAN,CAAZ;AACD,KAZH,EAaCK,KAbD,CAaOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAfD;AAmBH,GAzBD;;AA2BA,sBACI;AAAA,4BAEI;AAAM,MAAA,QAAQ,EAAEnB,kBAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,SAAS,EAAC,IAHd;AAII,QAAA,SAAS,EAAER,OAAO,CAAC4B,SAJvB;AAKI,QAAA,KAAK,EAAEtB,IALX;AAMI,QAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACoB,MAAF,CAASC,KAAV;AAN5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAQ,QAAA,SAAS,EAAE9B,OAAO,CAAC+B,MAA3B;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI,QAAC,iBAAD;AACI,MAAA,SAAS,EAAE7B;AADf;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxDD;;GAAMD,mB;;KAAAA,mB;AA0DN,eAAeA,mBAAf","sourcesContent":["import { useState } from 'react'\nimport FiveDayConditions from './FiveDayConditions'\nimport classes from './Forecast.module.css'\n\nconst FiveDayForecastTest = () => {\n\n    let [dailyData, setDailyData] = useState([])\n    let [wholeData, setWholeData] = useState([])\n    let [city, setCity] = useState('')\n\n    const getFiveDayForecast = (e) => {\n        \n        e.preventDefault()\n\n        const uriEncodedCity = encodeURIComponent(city)\n\n        fetch(`https://community-open-weather-map.p.rapidapi.com/forecast?q=?${uriEncodedCity}&units=metric`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"e67776521cmshd88d4bf5e0c8e46p16cc0fjsn0bd91cdc12f0\",\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\n            setDailyData(dailyData)\n            setWholeData(data.list)\n          })\n        .catch(err => {\n            console.log(err.message);\n        })\n\n\n\n    }\n\n    return (\n        <div>\n\n            <form onSubmit={getFiveDayForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    className={classes.textInput}\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    />\n\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\n            </form>\n\n\n            <FiveDayConditions \n                dailyData={dailyData}\n            />\n            \n        </div>\n    )\n}\n\nexport default FiveDayForecastTest\n"]},"metadata":{},"sourceType":"module"}