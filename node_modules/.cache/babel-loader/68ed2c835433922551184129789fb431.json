{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst UseFetch = initialUrl => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [url, setUrl] = useState(initialUrl); //because url will change every time user searches a new city\n\n  url.defaultProps = {\n    city: 'vancouver'\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(url).then(response => response.json()).then(data => {\n      setIsLoading(false);\n      setData(data);\n    }).catch(error => {\n      setIsLoading(false);\n      setError(error);\n      console.log(error);\n    }); //dependency array\n  }, [url]);\n  return {\n    data,\n    error,\n    isLoading,\n    setUrl\n  };\n};\n\n_s(UseFetch, \"F3lv78lorYy5v82iSYPETfQkjSM=\");\n\n_c = UseFetch;\nexport default UseFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFetch\");","map":{"version":3,"sources":["/Users/ashleywarden/Documents/projects/weather-app/src/components/Forecast/UseFetch.js"],"names":["useState","useEffect","UseFetch","initialUrl","data","setData","error","setError","isLoading","setIsLoading","url","setUrl","defaultProps","city","fetch","then","response","json","catch","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAAA;;AAE7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAACG,UAAD,CAA9B,CAL6B,CAKc;;AAE3CO,EAAAA,GAAG,CAACE,YAAJ,GAAmB;AACfC,IAAAA,IAAI,EAAE;AADS,GAAnB;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAK,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACKK,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWX,IAAD,IAAU;AACZK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KALL,EAMKc,KANL,CAMYZ,KAAD,IAAW;AACdG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACH,KAVL,EAHY,CAcZ;AACH,GAfQ,EAeN,CAACI,GAAD,CAfM,CAAT;AAiBA,SAAO;AAAEN,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeE,IAAAA,SAAf;AAA0BG,IAAAA;AAA1B,GAAP;AACH,CA7BD;;GAAMT,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst UseFetch = (initialUrl) => {\n\n    const [data, setData] = useState(null)\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const [url, setUrl] = useState(initialUrl) //because url will change every time user searches a new city\n\n    url.defaultProps = {\n        city: 'vancouver',\n    }\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n                setIsLoading(false)\n                setData(data)\n            })\n            .catch((error) => {\n                setIsLoading(false)\n                setError(error)\n                console.log(error)\n            })\n        //dependency array\n    }, [url])\n\n    return { data, error, isLoading, setUrl }\n}\n\nexport default UseFetch\n"]},"metadata":{},"sourceType":"module"}